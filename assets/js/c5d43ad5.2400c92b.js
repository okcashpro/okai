"use strict";(self.webpackChunkokai_docs=self.webpackChunkokai_docs||[]).push([[70578],{54241:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"core/evaluators","title":"\ud83d\udcca Evaluators","description":"Evaluators are core components that assess and extract information from conversations. They integrate with the AgentRuntime\'s evaluation system.","source":"@site/docs/core/evaluators.md","sourceDirName":"core","slug":"/core/evaluators","permalink":"/okai/docs/core/evaluators","draft":false,"unlisted":false,"editUrl":"https://github.com/okcashpro/okai/tree/main/docs/docs/core/evaluators.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Actions","permalink":"/okai/docs/core/actions"},"next":{"title":"Configuration","permalink":"/okai/docs/guides/configuration"}}');var t=r(74848),s=r(28453);const i={sidebar_position:5},o="\ud83d\udcca Evaluators",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Built-in Evaluators",id:"built-in-evaluators",level:2},{value:"Fact Evaluator",id:"fact-evaluator",level:3},{value:"Goal Evaluator",id:"goal-evaluator",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Fact Extraction",id:"fact-extraction",level:3},{value:"Goal Tracking",id:"goal-tracking",level:3},{value:"Validation",id:"validation",level:3},{value:"Handler Implementation",id:"handler-implementation",level:3},{value:"Examples",id:"examples",level:3},{value:"Creating Custom Evaluators",id:"creating-custom-evaluators",level:2},{value:"Memory Integration",id:"memory-integration",level:3},{value:"Memory Usage",id:"memory-usage",level:3},{value:"Integration with Agent Runtime",id:"integration-with-agent-runtime",level:2},{value:"Error Handling",id:"error-handling",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-evaluators",children:"\ud83d\udcca Evaluators"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/api/interfaces/evaluator",children:"Evaluators"})," are core components that assess and extract information from conversations. They integrate with the ",(0,t.jsx)(n.a,{href:"/api/classes/AgentRuntime",children:"AgentRuntime"}),"'s evaluation system."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Evaluators enable agents to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Build long-term memory"}),"\n",(0,t.jsx)(n.li,{children:"Track goal progress"}),"\n",(0,t.jsx)(n.li,{children:"Extract facts and insights"}),"\n",(0,t.jsx)(n.li,{children:"Maintain contextual awareness"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Import the necessary evaluator types:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { Evaluator, IAgentRuntime, Memory, State } from "@okcashpro/okai-core";\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Choose or create an evaluator:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const evaluator: Evaluator = {\r\n  name: "BASIC_EVALUATOR",\r\n  similes: ["SIMPLE_EVALUATOR"],\r\n  description: "Evaluates basic conversation elements",\r\n  validate: async (runtime: IAgentRuntime, message: Memory) => true,\r\n  handler: async (runtime: IAgentRuntime, message: Memory) => {\r\n    // Evaluation logic here\r\n    return result;\r\n  },\r\n  examples: [],\r\n};\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"built-in-evaluators",children:"Built-in Evaluators"}),"\n",(0,t.jsx)(n.h3,{id:"fact-evaluator",children:"Fact Evaluator"}),"\n",(0,t.jsx)(n.p,{children:"The fact evaluator extracts and stores factual information from conversations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'interface Fact {\r\n  claim: string;\r\n  type: "fact" | "opinion" | "status";\r\n  in_bio: boolean;\r\n  already_known: boolean;\r\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/okcashpro/okai/blob/main/packages/core/src/types.ts",children:"https://github.com/okcashpro/okai/blob/main/packages/core/src/types.ts"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Facts:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "claim": "User completed marathon training",\r\n  "type": "fact",\r\n  "in_bio": false,\r\n  "already_known": false\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"goal-evaluator",children:"Goal Evaluator"}),"\n",(0,t.jsx)(n.p,{children:"From bootstrap plugin - tracks conversation goals:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'interface Goal {\r\n  id: string;\r\n  name: string;\r\n  status: "IN_PROGRESS" | "DONE" | "FAILED";\r\n  objectives: Objective[];\r\n}\r\n\r\ninterface Objective {\r\n  description: string;\r\n  completed: boolean;\r\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"fact-extraction",children:"Fact Extraction"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Validate facts before storage"}),"\n",(0,t.jsx)(n.li,{children:"Avoid duplicate entries"}),"\n",(0,t.jsx)(n.li,{children:"Include relevant context"}),"\n",(0,t.jsx)(n.li,{children:"Properly categorize information types"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"goal-tracking",children:"Goal Tracking"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Define clear, measurable objectives"}),"\n",(0,t.jsx)(n.li,{children:"Update only changed goals"}),"\n",(0,t.jsx)(n.li,{children:"Handle failures gracefully"}),"\n",(0,t.jsx)(n.li,{children:"Track partial progress"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"validation",children:"Validation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep validation logic efficient"}),"\n",(0,t.jsx)(n.li,{children:"Check prerequisites first"}),"\n",(0,t.jsx)(n.li,{children:"Consider message content and state"}),"\n",(0,t.jsx)(n.li,{children:"Use appropriate memory managers"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"handler-implementation",children:"Handler Implementation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use runtime services appropriately"}),"\n",(0,t.jsx)(n.li,{children:"Store results in correct memory manager"}),"\n",(0,t.jsx)(n.li,{children:"Handle errors gracefully"}),"\n",(0,t.jsx)(n.li,{children:"Maintain state consistency"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Provide clear context descriptions"}),"\n",(0,t.jsx)(n.li,{children:"Show typical trigger messages"}),"\n",(0,t.jsx)(n.li,{children:"Document expected outcomes"}),"\n",(0,t.jsx)(n.li,{children:"Cover edge cases"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"creating-custom-evaluators",children:"Creating Custom Evaluators"}),"\n",(0,t.jsx)(n.p,{children:"Implement the Evaluator interface:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface Evaluator {\r\n  name: string;\r\n  similes: string[];\r\n  description: string;\r\n  validate: (runtime: IAgentRuntime, message: Memory) => Promise<boolean>;\r\n  handler: (\r\n    runtime: IAgentRuntime,\r\n    message: Memory,\r\n    state?: State,\r\n    options?: any,\r\n  ) => Promise<any>;\r\n  examples: EvaluatorExample[];\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/okcashpro/okai/blob/main/packages/core/src/types.ts",children:"https://github.com/okcashpro/okai/blob/main/packages/core/src/types.ts"})]}),"\n",(0,t.jsx)(n.h3,{id:"memory-integration",children:"Memory Integration"}),"\n",(0,t.jsx)(n.p,{children:"Example of storing evaluator results:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'try {\r\n  const memory = await runtime.memoryManager.addEmbeddingToMemory({\r\n    userId: user?.id,\r\n    content: { text: evaluationResult },\r\n    roomId: roomId,\r\n    embedding: await embed(runtime, evaluationResult),\r\n  });\r\n\r\n  await runtime.memoryManager.createMemory(memory);\r\n} catch (error) {\r\n  console.error("Failed to store evaluation result:", error);\r\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/okcashpro/okai/blob/main/packages/core/src/tests/memory.test.ts",children:"https://github.com/okcashpro/okai/blob/main/packages/core/src/tests/memory.test.ts"})]}),"\n",(0,t.jsx)(n.h3,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,t.jsx)(n.p,{children:"Evaluators should use runtime memory managers for storage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const memoryEvaluator: Evaluator = {\r\n  name: "MEMORY_EVAL",\r\n  handler: async (runtime: IAgentRuntime, message: Memory) => {\r\n    // Store in message memory\r\n    await runtime.messageManager.createMemory({\r\n      id: message.id,\r\n      content: message.content,\r\n      roomId: message.roomId,\r\n      userId: message.userId,\r\n      agentId: runtime.agentId,\r\n    });\r\n\r\n    // Store in description memory\r\n    await runtime.descriptionManager.createMemory({\r\n      id: message.id,\r\n      content: { text: "User description" },\r\n      roomId: message.roomId,\r\n      userId: message.userId,\r\n      agentId: runtime.agentId,\r\n    });\r\n  },\r\n};\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-agent-runtime",children:"Integration with Agent Runtime"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/api/classes/AgentRuntime",children:"AgentRuntime"})," processes evaluators through its ",(0,t.jsx)(n.a,{href:"/api/classes/AgentRuntime#evaluate",children:"evaluate"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Register evaluator\r\nruntime.registerEvaluator(customEvaluator);\r\n\r\n// Process evaluations\r\nconst results = await runtime.evaluate(message, state);\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'const robustEvaluator: Evaluator = {\r\n  name: "ROBUST_EVAL",\r\n  handler: async (runtime: IAgentRuntime, message: Memory) => {\r\n    try {\r\n      // Attempt evaluation\r\n      await runtime.messageManager.createMemory({\r\n        id: message.id,\r\n        content: message.content,\r\n        roomId: message.roomId,\r\n        userId: message.userId,\r\n        agentId: runtime.agentId,\r\n      });\r\n    } catch (error) {\r\n      // Log error and handle gracefully\r\n      console.error("Evaluation failed:", error);\r\n\r\n      // Store error state if needed\r\n      await runtime.messageManager.createMemory({\r\n        id: message.id,\r\n        content: { text: "Evaluation failed" },\r\n        roomId: message.roomId,\r\n        userId: message.userId,\r\n        agentId: runtime.agentId,\r\n      });\r\n    }\r\n  },\r\n};\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var a=r(96540);const t={},s=a.createContext(t);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);