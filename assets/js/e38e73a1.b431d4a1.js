"use strict";(self.webpackChunkokai_docs=self.webpackChunkokai_docs||[]).push([[46862],{50831:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Discord/development/dev-contributors/chat_2024-12-05","title":"dev-contributors 2024-12-05","description":"Summary","source":"@site/community/Discord/development/dev-contributors/chat_2024-12-05.md","sourceDirName":"Discord/development/dev-contributors","slug":"/Discord/development/dev-contributors/chat_2024-12-05","permalink":"/okai/community/Discord/development/dev-contributors/chat_2024-12-05","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"dev-contributors 2024-12-04","permalink":"/okai/community/Discord/development/dev-contributors/chat_2024-12-04"},"next":{"title":"dev-contributors 2024-12-06","permalink":"/okai/community/Discord/development/dev-contributors/chat_2024-12-06"}}');var o=i(74848),r=i(28453);const s={},d="dev-contributors 2024-12-05",a={},c=[{value:"Summary",id:"summary",level:2},{value:"FAQ",id:"faq",level:2},{value:"Who Helped Who",id:"who-helped-who",level:2},{value:"Action Items",id:"action-items",level:2},{value:"Technical Tasks",id:"technical-tasks",level:3},{value:"Documentation Needs",id:"documentation-needs",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dev-contributors-2024-12-05",children:"dev-contributors 2024-12-05"})}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(n.p,{children:"The chat segment focused on discussions around implementing a configuration option to allow users to select between small or large models. This was driven by concerns about API costs and flexibility within the system. The team agreed that this should be controlled via config rather than hardcoded, with pull request #853 being reviewed for merging."}),"\n",(0,o.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Should small models be a configuration option? Why are API costs for smaller model significantly cheaper than larger ones, and how can users specify the desired size in character cards or similar settings? (asked by @hosermage)"}),"\n",(0,o.jsx)(n.li,{children:"Is it better to control large/small defaults via config rather than hardcoding? What are your thoughts on this approach for managing model sizes within our system, and how can we implement such a configuration option effectively in the context of pull request #853? (asked by @cygaar)"}),"\n",(0,o.jsx)(n.li,{children:"Should we use big models for completions? Small ones are dumb but good for frequent/expensive tasks. Is there a bigger question of model providers and customization? (asked by @shaw)"}),"\n",(0,o.jsxs)(n.li,{children:["Would it be nice to have the ability to configure your choice of model provider for specifics task, considering ambiguity in ",(0,o.jsx)(n.code,{children:"SMALL"}),",",(0,o.jsx)(n.code,{children:"MEDIUM"})," & ",(0,o.jsx)(n.code,{children:"LARGE"}),"? (asked by @Agent Joshua $)"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"who-helped-who",children:"Who Helped Who"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"@cygaar helped Odilitime and cygaar with Discussing the default values for model sizes, addressing potential issues with labels in pull request #853 by providing @ShakkerNerd"}),"\n",(0,o.jsx)(n.li,{children:"dev team helped @Neodotneo with Agent Trading Training by providing @Neodotneo helped with agent trading training"}),"\n",(0,o.jsx)(n.li,{children:"community member helped general community members with Optimized Dev Script by providing @ShakkerNerd is working on an optimized dev script to disable build for docs in the same PR."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"action-items",children:"Action Items"}),"\n",(0,o.jsx)(n.h3,{id:"technical-tasks",children:"Technical Tasks"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Review, merge pull request #853 for model size configuration option (mentioned by @ShakkerNerd)"}),"\n",(0,o.jsx)(n.li,{children:"Configure choice of model provider for tasks (mentioned by @Agent Joshua $)"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"documentation-needs",children:"Documentation Needs"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Open a PR to address default values and make changes related to the character card feature. (mentioned by @cygaar)"}),"\n",(0,o.jsx)(n.li,{children:"Optimize dev script to disable build on docs in PR. (mentioned by @ShakkerNerd)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);