"use strict";(self.webpackChunkokai_docs=self.webpackChunkokai_docs||[]).push([[82806],{34429:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"advanced/infrastructure","title":"\ud83c\udfd7\ufe0f Infrastructure Guide","description":"Overview","source":"@site/docs/advanced/infrastructure.md","sourceDirName":"advanced","slug":"/advanced/infrastructure","permalink":"/okai/docs/advanced/infrastructure","draft":false,"unlisted":false,"editUrl":"https://github.com/okcashpro/okai/tree/main/docs/docs/advanced/infrastructure.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14},"sidebar":"tutorialSidebar","previous":{"title":"Fine-tuning","permalink":"/okai/docs/advanced/fine-tuning"},"next":{"title":"Trust Engine","permalink":"/okai/docs/advanced/trust-engine"}}');var s=r(74848),t=r(28453);const a={sidebar_position:14},l="\ud83c\udfd7\ufe0f Infrastructure Guide",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Core Components",id:"core-components",level:2},{value:"Database Adapters",id:"database-adapters",level:3},{value:"Schema Structure",id:"schema-structure",level:3},{value:"Setting Up Infrastructure",id:"setting-up-infrastructure",level:2},{value:"PostgreSQL Setup",id:"postgresql-setup",level:3},{value:"Connection Configuration",id:"connection-configuration",level:3},{value:"Memory Management",id:"memory-management",level:2},{value:"Vector Storage",id:"vector-storage",level:3},{value:"Memory Retrieval",id:"memory-retrieval",level:3},{value:"Scaling Considerations",id:"scaling-considerations",level:2},{value:"Database Optimization",id:"database-optimization",level:3},{value:"High Availability",id:"high-availability",level:3},{value:"Security",id:"security",level:2},{value:"Access Control",id:"access-control",level:3},{value:"Data Protection",id:"data-protection",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"Health Checks",id:"health-checks",level:3},{value:"Performance Metrics",id:"performance-metrics",level:3},{value:"Maintenance",id:"maintenance",level:2},{value:"Regular Tasks",id:"regular-tasks",level:3},{value:"Data Lifecycle",id:"data-lifecycle",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Diagnostic Queries",id:"diagnostic-queries",level:3},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\ufe0f-infrastructure-guide",children:"\ud83c\udfd7\ufe0f Infrastructure Guide"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"OKai's infrastructure is built on a flexible database architecture that supports multiple adapters and efficient data storage mechanisms for AI agent interactions, memory management, and relationship tracking."}),"\n",(0,s.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,s.jsx)(n.h3,{id:"database-adapters",children:"Database Adapters"}),"\n",(0,s.jsx)(n.p,{children:"OKai supports multiple database backends through a pluggable adapter system:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PostgreSQL"})," - Full-featured adapter with vector search capabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SQLite"})," - Lightweight local database option"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SQL.js"})," - In-memory database for testing and development"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Supabase"})," - Cloud-hosted PostgreSQL with additional features"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"schema-structure",children:"Schema Structure"}),"\n",(0,s.jsx)(n.p,{children:"The database schema includes several key tables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"- accounts: User and agent identities\r\n- rooms: Conversation spaces\r\n- memories: Vector-indexed message storage\r\n- goals: Agent objectives and progress\r\n- participants: Room membership tracking\r\n- relationships: Inter-agent connections\n"})}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-infrastructure",children:"Setting Up Infrastructure"}),"\n",(0,s.jsx)(n.h3,{id:"postgresql-setup",children:"PostgreSQL Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Install PostgreSQL Extensions"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE EXTENSION IF NOT EXISTS vector;\r\nCREATE EXTENSION IF NOT EXISTS fuzzystrmatch;\r\nCREATE EXTENSION IF NOT EXISTS pgcrypto;\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Initialize Core Tables"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'-- Create base tables\r\nCREATE TABLE accounts (\r\n    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),\r\n    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\r\n    "name" TEXT,\r\n    "username" TEXT UNIQUE,\r\n    "email" TEXT NOT NULL UNIQUE,\r\n    "avatarUrl" TEXT,\r\n    "details" JSONB DEFAULT \'{}\'::jsonb\r\n);\r\n\r\nCREATE TABLE rooms (\r\n    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),\r\n    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP\r\n);\r\n\r\nCREATE TABLE memories (\r\n    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),\r\n    "type" TEXT NOT NULL,\r\n    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,\r\n    "content" JSONB NOT NULL,\r\n    "embedding" vector(1536),\r\n    "userId" UUID REFERENCES accounts("id"),\r\n    "agentId" UUID REFERENCES accounts("id"),\r\n    "roomId" UUID REFERENCES rooms("id"),\r\n    "isUnique" BOOLEAN DEFAULT true NOT NULL\r\n);\r\n\r\nCREATE TABLE participants (\r\n    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),\r\n    "userId" UUID REFERENCES accounts("id"),\r\n    "roomId" UUID REFERENCES rooms("id"),\r\n    "joinedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP\r\n);\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Set Up Indexes"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'CREATE INDEX idx_memories_embedding ON memories\r\n    USING hnsw ("embedding" vector_cosine_ops);\r\n\r\nCREATE INDEX idx_memories_type_room ON memories("type", "roomId");\r\n\r\nCREATE INDEX idx_participants_user ON participants("userId");\r\nCREATE INDEX idx_participants_room ON participants("roomId");\r\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"connection-configuration",children:"Connection Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// PostgreSQL Configuration\r\nconst postgresConfig = {\r\n  max: 20,\r\n  idleTimeoutMillis: 30000,\r\n  connectionTimeoutMillis: 2000,\r\n};\r\n\r\n// Supabase Configuration\r\nconst supabaseConfig = {\r\n  supabaseUrl: process.env.SUPABASE_URL,\r\n  supabaseKey: process.env.SUPABASE_KEY,\r\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"memory-management",children:"Memory Management"}),"\n",(0,s.jsx)(n.h3,{id:"vector-storage",children:"Vector Storage"}),"\n",(0,s.jsx)(n.p,{children:"The memory system uses vector embeddings for semantic search:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'async function storeMemory(runtime: IAgentRuntime, content: string) {\r\n  const embedding = await runtime.embed(content);\r\n\r\n  await runtime.databaseAdapter.createMemory({\r\n    type: "message",\r\n    content: { text: content },\r\n    embedding,\r\n    roomId: roomId,\r\n    userId: userId,\r\n  });\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"memory-retrieval",children:"Memory Retrieval"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'async function searchMemories(runtime: IAgentRuntime, query: string) {\r\n  const embedding = await runtime.embed(query);\r\n\r\n  return runtime.databaseAdapter.searchMemoriesByEmbedding(embedding, {\r\n    match_threshold: 0.8,\r\n    count: 10,\r\n    tableName: "memories",\r\n  });\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"scaling-considerations",children:"Scaling Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"database-optimization",children:"Database Optimization"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Index Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use HNSW indexes for vector similarity search"}),"\n",(0,s.jsx)(n.li,{children:"Create appropriate indexes for frequent query patterns"}),"\n",(0,s.jsx)(n.li,{children:"Regularly analyze and update index statistics"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Connection Pooling"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const pool = new Pool({\r\n  max: 20, // Maximum pool size\r\n  idleTimeoutMillis: 30000,\r\n  connectionTimeoutMillis: 2000,\r\n});\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Query Optimization"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use prepared statements"}),"\n",(0,s.jsx)(n.li,{children:"Implement efficient pagination"}),"\n",(0,s.jsx)(n.li,{children:"Optimize vector similarity searches"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"high-availability",children:"High Availability"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Database Replication"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set up read replicas for scaling read operations"}),"\n",(0,s.jsx)(n.li,{children:"Configure streaming replication for failover"}),"\n",(0,s.jsx)(n.li,{children:"Implement connection retry logic"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Backup Strategy"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Regular backups\r\npg_dump -Fc mydb > backup.dump\r\n\r\n-- Point-in-time recovery\r\npg_basebackup -D backup -Fp -Xs -P\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security",children:"Security"}),"\n",(0,s.jsx)(n.h3,{id:"access-control",children:"Access Control"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Row Level Security"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'ALTER TABLE memories ENABLE ROW LEVEL SECURITY;\r\n\r\nCREATE POLICY "memories_isolation" ON memories\r\n    USING (auth.uid() = "userId" OR auth.uid() = "agentId");\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Role Management"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Create application role\r\nCREATE ROLE app_user;\r\n\r\n-- Grant necessary permissions\r\nGRANT SELECT, INSERT ON memories TO app_user;\r\nGRANT USAGE ON SCHEMA public TO app_user;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"data-protection",children:"Data Protection"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Encryption"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use TLS for connections"}),"\n",(0,s.jsx)(n.li,{children:"Encrypt sensitive data at rest"}),"\n",(0,s.jsx)(n.li,{children:"Implement key rotation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Audit Logging"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE logs (\r\n    "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),\r\n    "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\r\n    "userId" UUID NOT NULL REFERENCES accounts("id"),\r\n    "body" JSONB NOT NULL,\r\n    "type" TEXT NOT NULL,\r\n    "roomId" UUID NOT NULL REFERENCES rooms("id")\r\n);\n'})}),"\n",(0,s.jsx)(n.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsx)(n.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'async function checkDatabaseHealth(): Promise<boolean> {\r\n  try {\r\n    await db.query("SELECT 1");\r\n    return true;\r\n  } catch (error) {\r\n    console.error("Database health check failed:", error);\r\n    return false;\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,s.jsx)(n.p,{children:"Track key metrics:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Query performance"}),"\n",(0,s.jsx)(n.li,{children:"Connection pool utilization"}),"\n",(0,s.jsx)(n.li,{children:"Memory usage"}),"\n",(0,s.jsx)(n.li,{children:"Vector search latency"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"maintenance",children:"Maintenance"}),"\n",(0,s.jsx)(n.h3,{id:"regular-tasks",children:"Regular Tasks"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Vacuum Operations"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Regular vacuum\r\nVACUUM ANALYZE memories;\r\n\r\n-- Analyze statistics\r\nANALYZE memories;\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Index Maintenance"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Reindex vector similarity index\r\nREINDEX INDEX idx_memories_embedding;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"data-lifecycle",children:"Data Lifecycle"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Archival Strategy"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Archive old conversations"}),"\n",(0,s.jsx)(n.li,{children:"Compress inactive memories"}),"\n",(0,s.jsx)(n.li,{children:"Implement data retention policies"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cleanup Jobs"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'async function cleanupOldMemories() {\r\n  const cutoffDate = new Date();\r\n  cutoffDate.setMonth(cutoffDate.getMonth() - 6);\r\n\r\n  await db.query(\r\n    `\r\n        DELETE FROM memories\r\n        WHERE "createdAt" < $1\r\n    `,\r\n    [cutoffDate],\r\n  );\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Connection Problems"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check connection pool settings"}),"\n",(0,s.jsx)(n.li,{children:"Verify network connectivity"}),"\n",(0,s.jsx)(n.li,{children:"Review firewall rules"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance Issues"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Analyze query plans"}),"\n",(0,s.jsx)(n.li,{children:"Check index usage"}),"\n",(0,s.jsx)(n.li,{children:"Monitor resource utilization"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Vector Search Problems"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify embedding dimensions"}),"\n",(0,s.jsx)(n.li,{children:"Check similarity thresholds"}),"\n",(0,s.jsx)(n.li,{children:"Review index configuration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"diagnostic-queries",children:"Diagnostic Queries"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Check connection status\r\nSELECT * FROM pg_stat_activity;\r\n\r\n-- Analyze query performance\r\nEXPLAIN ANALYZE\r\nSELECT * FROM memories\r\nWHERE embedding <-> $1 < 0.3\r\nLIMIT 10;\r\n\r\n-- Monitor index usage\r\nSELECT schemaname, tablename, indexname, idx_scan\r\nFROM pg_stat_user_indexes;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.postgresql.org/docs/",children:"PostgreSQL Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var i=r(96540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);