"use strict";(self.webpackChunkokai_docs=self.webpackChunkokai_docs||[]).push([[39082],{367:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"packages/agent","title":"\ud83e\udd16 Agent Package","description":"The Agent Package (@okai/agent) provides the high-level orchestration layer for OKai, managing agent lifecycles, character loading, client initialization, and runtime coordination.","source":"@site/docs/packages/agent.md","sourceDirName":"packages","slug":"/packages/agent","permalink":"/okai/docs/packages/agent","draft":false,"unlisted":false,"editUrl":"https://github.com/okcashpro/okai/tree/main/docs/docs/packages/agent.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Client Packages","permalink":"/okai/docs/packages/clients"},"next":{"title":"Plugin System","permalink":"/okai/docs/packages/plugins"}}');var t=r(74848),i=r(28453);const s={sidebar_position:1},c="\ud83e\udd16 Agent Package",l={},o=[{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Key Responsibilities",id:"key-responsibilities",level:2},{value:"Installation",id:"installation",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Core Features",id:"core-features",level:2},{value:"Character Loading",id:"character-loading",level:3},{value:"Agent Creation",id:"agent-creation",level:3},{value:"Client Initialization",id:"client-initialization",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Token Management",id:"token-management",level:3},{value:"Database Selection",id:"database-selection",level:3},{value:"Common Issues &amp; Solutions",id:"common-issues--solutions",level:2},{value:"Related Resources",id:"related-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-agent-package",children:"\ud83e\udd16 Agent Package"})}),"\n",(0,t.jsxs)(n.p,{children:["The Agent Package (",(0,t.jsx)(n.code,{children:"@okai/agent"}),") provides the high-level orchestration layer for OKai, managing agent lifecycles, character loading, client initialization, and runtime coordination."]}),"\n",(0,t.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,t.jsx)(n.mermaid,{value:'graph TD\r\n    AP["Agent Package"]\r\n    AP --\x3e CS["Character System"]\r\n    AP --\x3e RT["Runtime Management"]\r\n    AP --\x3e DB["Database Integration"]\r\n    AP --\x3e CL["Client Management"]\r\n\r\n    CS --\x3e CF["Character Loading"]\r\n    CS --\x3e CP["Plugin Loading"]\r\n    CS --\x3e CT["Token Management"]\r\n\r\n    RT --\x3e AR["Agent Runtime"]\r\n    RT --\x3e AM["Agent Monitoring"]\r\n    RT --\x3e AH["Shell Interface"]\r\n\r\n    DB --\x3e PS["PostgreSQL Support"]\r\n    DB --\x3e SL["SQLite Support"]\r\n\r\n    CL --\x3e DC["Direct Client"]\r\n    CL --\x3e PC["Platform Clients"]\r\n\r\n    %% Simple styling with black text\r\n    classDef default fill:#f9f9f9,stroke:#333,stroke-width:1px,color:black\r\n    classDef highlight fill:#e9e9e9,stroke:#333,stroke-width:2px,color:black\r\n\r\n    class AP highlight'}),"\n",(0,t.jsx)(n.h2,{id:"key-responsibilities",children:"Key Responsibilities"}),"\n",(0,t.jsxs)(n.p,{children:["The Agent Package (",(0,t.jsx)(n.code,{children:"@okcashpro/agent"}),") serves as the orchestration layer for OKai, handling:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Character and plugin loading"}),"\n",(0,t.jsx)(n.li,{children:"Runtime initialization and management"}),"\n",(0,t.jsx)(n.li,{children:"Database adapter selection"}),"\n",(0,t.jsx)(n.li,{children:"Client initialization and coordination"}),"\n",(0,t.jsx)(n.li,{children:"Token and environment management"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm add @okcashpro/agent\n"})}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import { startAgents, loadCharacters } from "@okcashpro/agent";\r\n\r\n// Load characters from files\r\nconst args = parseArguments();\r\nconst characters = await loadCharacters(args.characters || args.character);\r\n\r\n// Start agent system\r\nawait startAgents();\n'})}),"\n",(0,t.jsx)(n.h2,{id:"core-features",children:"Core Features"}),"\n",(0,t.jsx)(n.h3,{id:"character-loading",children:"Character Loading"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'export async function loadCharacters(\r\n  charactersArg: string,\r\n): Promise<Character[]> {\r\n  const characterPaths = normalizeCharacterPaths(charactersArg);\r\n  const loadedCharacters = [];\r\n\r\n  for (const path of characterPaths) {\r\n    try {\r\n      const character = JSON.parse(fs.readFileSync(path, "utf8"));\r\n\r\n      // Load plugins if specified\r\n      if (character.plugins) {\r\n        character.plugins = await Promise.all(\r\n          character.plugins.map(async (plugin) => {\r\n            const importedPlugin = await import(plugin);\r\n            return importedPlugin;\r\n          }),\r\n        );\r\n      }\r\n\r\n      loadedCharacters.push(character);\r\n    } catch (error) {\r\n      console.error(`Error loading character from ${path}: ${error}`);\r\n    }\r\n  }\r\n\r\n  // Fall back to default if none loaded\r\n  return loadedCharacters.length > 0 ? loadedCharacters : [defaultCharacter];\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"agent-creation",children:"Agent Creation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export async function createAgent(\r\n  character: Character,\r\n  db: IDatabaseAdapter,\r\n  token: string,\r\n) {\r\n  return new AgentRuntime({\r\n    databaseAdapter: db,\r\n    token,\r\n    modelProvider: character.modelProvider,\r\n    character,\r\n    plugins: [\r\n      bootstrapPlugin,\r\n      nodePlugin,\r\n      character.settings.secrets.WALLET_PUBLIC_KEY ? solanaPlugin : null,\r\n    ].filter(Boolean),\r\n    providers: [],\r\n    actions: [],\r\n    services: [],\r\n    managers: [],\r\n  });\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"client-initialization",children:"Client Initialization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export async function initializeClients(\r\n  character: Character,\r\n  runtime: IAgentRuntime,\r\n) {\r\n  const clients = [];\r\n  const clientTypes = character.clients?.map((str) => str.toLowerCase()) || [];\r\n\r\n  if (clientTypes.includes(Clients.DISCORD)) {\r\n    clients.push(await DiscordClientInterface.start(runtime));\r\n  }\r\n  if (clientTypes.includes(Clients.TELEGRAM)) {\r\n    clients.push(await TelegramClientInterface.start(runtime));\r\n  }\r\n  if (clientTypes.includes(Clients.TWITTER)) {\r\n    clients.push(await TwitterClientInterface.start(runtime));\r\n  }\r\n  if (clientTypes.includes(Clients.DIRECT)) {\r\n    clients.push(await AutoClientInterface.start(runtime));\r\n  }\r\n\r\n  return clients;\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"token-management",children:"Token Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export function getTokenForProvider(\r\n  provider: ModelProviderName,\r\n  character: Character,\r\n) {\r\n  switch (provider) {\r\n    case ModelProviderName.OPENAI:\r\n      return (\r\n        character.settings?.secrets?.OPENAI_API_KEY || settings.OPENAI_API_KEY\r\n      );\r\n    case ModelProviderName.ANTHROPIC:\r\n      return (\r\n        character.settings?.secrets?.ANTHROPIC_API_KEY ||\r\n        settings.ANTHROPIC_API_KEY\r\n      );\r\n    // Handle other providers...\r\n  }\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"database-selection",children:"Database Selection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'function initializeDatabase() {\r\n  if (process.env.POSTGRES_URL) {\r\n    return new PostgresDatabaseAdapter({\r\n      connectionString: process.env.POSTGRES_URL,\r\n    });\r\n  }\r\n  return new SqliteDatabaseAdapter(new Database("./db.sqlite"));\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-issues--solutions",children:"Common Issues & Solutions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Character Loading"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Handle missing character files\r\nif (!characters || characters.length === 0) {\r\n  console.log("No characters found, using default character");\r\n  characters = [defaultCharacter];\r\n}\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Plugin Loading"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Handle plugin import errors\r\ntry {\r\n  character.plugins = await Promise.all(\r\n    character.plugins.map((plugin) => import(plugin)),\r\n  );\r\n} catch (error) {\r\n  console.error(`Error loading plugin: ${error.message}`);\r\n  character.plugins = [];\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../../packages/plugins",children:"Plugin System"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var a=r(96540);const t={},i=a.createContext(t);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);