"use strict";(self.webpackChunkokai_docs=self.webpackChunkokai_docs||[]).push([[81729],{51992:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"functions/parseJsonArrayFromText","title":"parseJsonArrayFromText","description":"@okcashpro/okai v0.1.7-alpha.1 / parseJsonArrayFromText","source":"@site/api/functions/parseJsonArrayFromText.md","sourceDirName":"functions","slug":"/functions/parseJsonArrayFromText","permalink":"/okai/api/functions/parseJsonArrayFromText","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"parseJSONObjectFromText","permalink":"/okai/api/functions/parseJSONObjectFromText"},"next":{"title":"parseShouldRespondFromText","permalink":"/okai/api/functions/parseShouldRespondFromText"}}');var s=n(74848),a=n(28453);const o={},i="Function: parseJsonArrayFromText()",c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function p(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/okai/api/",children:"@okcashpro/okai v0.1.7-alpha.1"})," / parseJsonArrayFromText"]}),"\n",(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"function-parsejsonarrayfromtext",children:"Function: parseJsonArrayFromText()"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"parseJsonArrayFromText"}),"(",(0,s.jsx)(r.code,{children:"text"}),"): ",(0,s.jsx)(r.code,{children:"any"}),"[]"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["Parses a JSON array from a given text. The function looks for a JSON block wrapped in triple backticks\r\nwith ",(0,s.jsx)(r.code,{children:"json"})," language identifier, and if not found, it searches for an array pattern within the text.\r\nIt then attempts to parse the JSON string into a JavaScript object. If parsing is successful and the result\r\nis an array, it returns the array; otherwise, it returns null."]}),"\n",(0,s.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.p,{children:["\u2022 ",(0,s.jsx)(r.strong,{children:"text"}),": ",(0,s.jsx)(r.code,{children:"string"})]}),"\n",(0,s.jsx)(r.p,{children:"The input text from which to extract and parse the JSON array."}),"\n",(0,s.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"any"}),"[]"]}),"\n",(0,s.jsx)(r.p,{children:"An array parsed from the JSON string if successful; otherwise, null."}),"\n",(0,s.jsx)(r.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://github.com/okcashpro/okai/blob/main/packages/core/src/parsing.ts#L61",children:"packages/core/src/parsing.ts:61"})})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var t=n(96540);const s={},a=t.createContext(s);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);