"use strict";(self.webpackChunkokai_docs=self.webpackChunkokai_docs||[]).push([[16507],{26796:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"packages/clients","title":"\ud83d\udd0c Client Packages","description":"Overview","source":"@site/docs/packages/clients.md","sourceDirName":"packages","slug":"/packages/clients","permalink":"/okai/docs/packages/clients","draft":false,"unlisted":false,"editUrl":"https://github.com/okcashpro/okai/tree/main/docs/docs/packages/clients.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Database Adapters","permalink":"/okai/docs/packages/adapters"},"next":{"title":"Agent Package","permalink":"/okai/docs/packages/agent"}}');var s=r(74848),t=r(28453);const a={},l="\ud83d\udd0c Client Packages",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Architecture Overview",id:"architecture-overview",level:3},{value:"Available Clients",id:"available-clients",level:2},{value:"Installation",id:"installation",level:2},{value:"Discord Client",id:"discord-client",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Features",id:"features",level:3},{value:"Voice Integration",id:"voice-integration",level:3},{value:"Message Handling",id:"message-handling",level:3},{value:"Twitter Client",id:"twitter-client",level:2},{value:"Basic Setup",id:"basic-setup-1",level:3},{value:"Components",id:"components",level:3},{value:"Post Management",id:"post-management",level:3},{value:"Search Features",id:"search-features",level:3},{value:"Telegram Client",id:"telegram-client",level:2},{value:"Basic Setup",id:"basic-setup-2",level:3},{value:"Message Management",id:"message-management",level:3},{value:"Direct Client",id:"direct-client",level:2},{value:"Basic Setup",id:"basic-setup-3",level:3},{value:"API Endpoints",id:"api-endpoints",level:3},{value:"Auto Client",id:"auto-client",level:2},{value:"Basic Setup",id:"basic-setup-4",level:3},{value:"Automated Trading",id:"automated-trading",level:3},{value:"Common Features",id:"common-features",level:2},{value:"Message Handling",id:"message-handling-1",level:3},{value:"Media Processing",id:"media-processing",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Error Handling",id:"error-handling-1",level:3},{value:"Resource Management",id:"resource-management",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Connection Management",id:"connection-management",level:3},{value:"Message Queuing",id:"message-queuing",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Related Resources",id:"related-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-client-packages",children:"\ud83d\udd0c Client Packages"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"OKai's client packages enable integration with various platforms and services. Each client provides a standardized interface for sending and receiving messages, handling media, and interacting with platform-specific features."}),"\n",(0,s.jsx)(n.h3,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TD\r\n    RT["Agent Runtime"]\r\n    CI["Client Interface"]\r\n    RT --\x3e CI\r\n\r\n    %% Main Clients\r\n    CI --\x3e DC["Direct Client"]\r\n    CI --\x3e DSC["Discord Client"]\r\n    CI --\x3e TC["Telegram Client"]\r\n    CI --\x3e TWC["Twitter Client"]\r\n    CI --\x3e AC["Auto Client"]\r\n\r\n    %% Key Features - one per client for clarity\r\n    DC --\x3e |"REST API"| DC1["Messages & Images"]\r\n    DSC --\x3e |"Bot Integration"| DSC1["Voice & Messages"]\r\n    TC --\x3e |"Bot API"| TC1["Commands & Media"]\r\n    TWC --\x3e |"Social"| TWC1["Posts & Interactions"]\r\n    AC --\x3e |"Trading"| AC1["Analysis & Execution"]\r\n\r\n    %% Simple styling with better contrast and black text\r\n    classDef default fill:#f9f9f9,stroke:#333,stroke-width:1px,color:black\r\n    classDef highlight fill:#e9e9e9,stroke:#333,stroke-width:2px,color:black\r\n\r\n    class RT,CI highlight'}),"\n",(0,s.jsx)(n.h2,{id:"available-clients",children:"Available Clients"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Discord"})," (",(0,s.jsx)(n.code,{children:"@okai/client-discord"}),") - Full Discord bot integration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Twitter"})," (",(0,s.jsx)(n.code,{children:"@okai/client-twitter"}),") - Twitter bot and interaction handling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Telegram"})," (",(0,s.jsx)(n.code,{children:"@okai/client-telegram"}),") - Telegram bot integration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Direct"})," (",(0,s.jsx)(n.code,{children:"@okai/client-direct"}),") - Direct API interface for custom integrations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Auto"})," (",(0,s.jsx)(n.code,{children:"@okai/client-auto"}),") - Automated trading and interaction client"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Discord\r\npnpm add @okai/client-discord\r\n\r\n# Twitter\r\npnpm add @okai/client-twitter\r\n\r\n# Telegram\r\npnpm add @okai/client-telegram\r\n\r\n# Direct API\r\npnpm add @okai/client-direct\r\n\r\n# Auto Client\r\npnpm add @okai/client-auto\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"discord-client",children:"Discord Client"}),"\n",(0,s.jsx)(n.p,{children:"The Discord client provides full integration with Discord's features including voice, reactions, and attachments."}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { DiscordClientInterface } from "@okai/client-discord";\r\n\r\n// Initialize client\r\nconst client = await DiscordClientInterface.start(runtime);\r\n\r\n// Configuration in .env\r\nDISCORD_APPLICATION_ID = your_app_id;\r\nDISCORD_API_TOKEN = your_bot_token;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Voice channel integration"}),"\n",(0,s.jsx)(n.li,{children:"Message attachments"}),"\n",(0,s.jsx)(n.li,{children:"Reactions handling"}),"\n",(0,s.jsx)(n.li,{children:"Media transcription"}),"\n",(0,s.jsx)(n.li,{children:"Room management"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"voice-integration",children:"Voice Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class VoiceManager {\r\n  // Join a voice channel\r\n  async handleJoinChannelCommand(interaction) {\r\n    await this.joinVoiceChannel(channel);\r\n  }\r\n\r\n  // Handle voice state updates\r\n  async handleVoiceStateUpdate(oldState, newState) {\r\n    if (newState.channelId) {\r\n      await this.handleUserJoinedChannel(newState);\r\n    }\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"message-handling",children:"Message Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class MessageManager {\r\n  async handleMessage(message) {\r\n    // Ignore bot messages\r\n    if (message.author.bot) return;\r\n\r\n    // Process attachments\r\n    if (message.attachments.size > 0) {\r\n      await this.processAttachments(message);\r\n    }\r\n\r\n    // Generate response\r\n    await this.generateResponse(message);\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"twitter-client",children:"Twitter Client"}),"\n",(0,s.jsx)(n.p,{children:"The Twitter client enables posting, searching, and interacting with Twitter users."}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup-1",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { TwitterClientInterface } from "@okai/client-twitter";\r\n// Initialize client\r\nconst client = await TwitterClientInterface.start(runtime);\r\n\r\n// Configuration in .env\r\nTWITTER_USERNAME = your_username;\r\nTWITTER_PASSWORD = your_password;\r\nTWITTER_EMAIL = your_email;\r\nTWITTER_COOKIES = your_cookies;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PostClient"}),": Handles creating and managing posts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SearchClient"}),": Handles search functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"InteractionClient"}),": Manages user interactions"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"post-management",children:"Post Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class TwitterPostClient {\r\n  async createPost(content: string) {\r\n    return await this.post({\r\n      text: content,\r\n      media: await this.processMedia(),\r\n    });\r\n  }\r\n\r\n  async replyTo(tweetId: string, content: string) {\r\n    return await this.post({\r\n      text: content,\r\n      reply: { in_reply_to_tweet_id: tweetId },\r\n    });\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"search-features",children:"Search Features"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'class TwitterSearchClient {\r\n  async searchTweets(query: string) {\r\n    return await this.search({\r\n      query,\r\n      filters: {\r\n        recency: "recent",\r\n        language: "en",\r\n      },\r\n    });\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"telegram-client",children:"Telegram Client"}),"\n",(0,s.jsx)(n.p,{children:"The Telegram client provides messaging and bot functionality for Telegram."}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup-2",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { TelegramClientInterface } from "@okai/client-telegram";\r\n\r\n// Initialize client\r\nconst client = await TelegramClientInterface.start(runtime);\r\n\r\n// Configuration in .env\r\nTELEGRAM_BOT_TOKEN = your_bot_token;\n'})}),"\n",(0,s.jsx)(n.h3,{id:"message-management",children:"Message Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class TelegramClient {\r\n  async handleMessage(message) {\r\n    // Process message content\r\n    const content = await this.processMessage(message);\r\n\r\n    // Generate response\r\n    const response = await this.generateResponse(content);\r\n\r\n    // Send response\r\n    await this.sendMessage(message.chat.id, response);\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"direct-client",children:"Direct Client"}),"\n",(0,s.jsx)(n.p,{children:"The Direct client provides a REST API interface for custom integrations."}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup-3",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { DirectClientInterface } from "@okai/client-direct";\r\n\r\n// Initialize client\r\nconst client = await DirectClientInterface.start(runtime);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'class DirectClient {\r\n  constructor() {\r\n    // Message endpoint\r\n    this.app.post("/:agentId/message", async (req, res) => {\r\n      const response = await this.handleMessage(req.body);\r\n      res.json(response);\r\n    });\r\n\r\n    // Image generation endpoint\r\n    this.app.post("/:agentId/image", async (req, res) => {\r\n      const images = await this.generateImage(req.body);\r\n      res.json(images);\r\n    });\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"auto-client",children:"Auto Client"}),"\n",(0,s.jsx)(n.p,{children:"The Auto client enables automated interactions and trading."}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup-4",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { AutoClientInterface } from "@okai/client-auto";\r\n\r\n// Initialize client\r\nconst client = await AutoClientInterface.start(runtime);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"automated-trading",children:"Automated Trading"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class AutoClient {\r\n  constructor(runtime: IAgentRuntime) {\r\n    this.runtime = runtime;\r\n\r\n    // Start trading loop\r\n    this.interval = setInterval(\r\n      () => {\r\n        this.makeTrades();\r\n      },\r\n      60 * 60 * 1000,\r\n    ); // 1 hour interval\r\n  }\r\n\r\n  async makeTrades() {\r\n    // Get recommendations\r\n    const recommendations = await this.getHighTrustRecommendations();\r\n\r\n    // Analyze tokens\r\n    const analysis = await this.analyzeTokens(recommendations);\r\n\r\n    // Execute trades\r\n    await this.executeTrades(analysis);\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"common-features",children:"Common Features"}),"\n",(0,s.jsx)(n.h3,{id:"message-handling-1",children:"Message Handling"}),"\n",(0,s.jsx)(n.p,{children:"All clients implement standard message handling:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ClientInterface {\r\n  async handleMessage(message: Message): Promise<void>;\r\n  async generateResponse(context: Context): Promise<Response>;\r\n  async sendMessage(destination: string, content: Content): Promise<void>;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"media-processing",children:"Media Processing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface MediaProcessor {\r\n  async processImage(image: Image): Promise<ProcessedImage>;\r\n  async processVideo(video: Video): Promise<ProcessedVideo>;\r\n  async processAudio(audio: Audio): Promise<ProcessedAudio>;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'class BaseClient {\r\n  protected async handleError(error: Error) {\r\n    console.error("Client error:", error);\r\n\r\n    if (error.code === "RATE_LIMIT") {\r\n      await this.handleRateLimit(error);\r\n    } else if (error.code === "AUTH_FAILED") {\r\n      await this.refreshAuth();\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Store credentials securely in environment variables"}),"\n",(0,s.jsx)(n.li,{children:"Implement token refresh mechanisms"}),"\n",(0,s.jsx)(n.li,{children:"Handle authentication errors gracefully"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Rate Limiting"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implement exponential backoff"}),"\n",(0,s.jsx)(n.li,{children:"Track API usage"}),"\n",(0,s.jsx)(n.li,{children:"Queue messages during rate limits"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Log errors with context"}),"\n",(0,s.jsx)(n.li,{children:"Implement retry logic"}),"\n",(0,s.jsx)(n.li,{children:"Handle platform-specific errors"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Media Processing"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Validate media before processing"}),"\n",(0,s.jsx)(n.li,{children:"Handle different file formats"}),"\n",(0,s.jsx)(n.li,{children:"Implement size limits"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"error-handling-1",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'class BaseClient {\r\n  protected async handleError(error: Error) {\r\n    if (error.code === "RATE_LIMIT") {\r\n      await this.handleRateLimit(error);\r\n    } else if (error.code === "AUTH_FAILED") {\r\n      await this.refreshAuth();\r\n    } else if (error.code === "NETWORK_ERROR") {\r\n      await this.reconnect();\r\n    }\r\n\r\n    // Log error\r\n    console.error("Client error:", {\r\n      type: error.name,\r\n      message: error.message,\r\n      code: error.code,\r\n      stack: error.stack,\r\n    });\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"resource-management",children:"Resource Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class ClientManager {\r\n  private async cleanup() {\r\n    // Close connections\r\n    await Promise.all(this.connections.map((conn) => conn.close()));\r\n\r\n    // Clear caches\r\n    this.cache.clear();\r\n\r\n    // Cancel timers\r\n    this.timers.forEach((timer) => clearInterval(timer));\r\n  }\r\n\r\n  private async reconnect() {\r\n    await this.cleanup();\r\n    await wait(this.calculateBackoff());\r\n    await this.initialize();\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class RateLimiter {\r\n  private async handleRateLimit(error: RateLimitError) {\r\n    const delay = this.calculateBackoff(error);\r\n    await wait(delay);\r\n    return this.retryRequest();\r\n  }\r\n\r\n  private calculateBackoff(error: RateLimitError): number {\r\n    return Math.min(this.baseDelay * Math.pow(2, this.attempts), this.maxDelay);\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsx)(n.h3,{id:"connection-management",children:"Connection Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class ClientManager {\r\n  private reconnect() {\r\n    await this.disconnect();\r\n    await wait(this.backoff());\r\n    await this.connect();\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"message-queuing",children:"Message Queuing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"class MessageQueue {\r\n  async queueMessage(message: Message) {\r\n    await this.queue.push(message);\r\n    this.processQueue();\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Authentication Failures"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Implement token refresh\r\nasync refreshAuth() {\r\n  const newToken = await this.requestNewToken();\r\n  await this.updateToken(newToken);\r\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Rate Limits"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Handle rate limiting\r\nasync handleRateLimit(error) {\r\n  const delay = this.calculateBackoff(error);\r\n  await wait(delay);\r\n  return this.retryRequest();\r\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Connection Issues"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Implement reconnection logic\r\nasync handleDisconnect() {\r\n  await this.reconnect({\r\n    maxAttempts: 5,\r\n    backoff: 'exponential'\r\n  });\r\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Message Processing Failure"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'async processMessage(message) {\r\n  try {\r\n    return await this.messageProcessor(message);\r\n  } catch (error) {\r\n    if (error.code === "INVALID_FORMAT") {\r\n      return this.handleInvalidFormat(message);\r\n    }\r\n    throw error;\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../../packages/core",children:"Error Handling"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var i=r(96540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);